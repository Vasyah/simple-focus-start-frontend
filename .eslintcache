[{"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\index.js":"1","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\App.js":"2","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\contexts\\AuthContext.js":"3","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\Header\\Header.js":"4","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\PrivateRoute\\PrivateRoute.js":"5","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\firebase.js":"6","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\Alert\\Alert.js":"7","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useValidatePassword.js":"8","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useLogin.js":"9","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useValidateEmail.js":"10","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useSignup.js":"11","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useUpdateProfile.js":"12","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useForgotPassword.js":"13","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\Users\\Users.js":"14","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\Loading\\Loading.js":"15","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\Delayed\\Delayed.js":"16","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useNoUser.js":"17","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\contexts\\VideoContext.js":"18","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\contexts\\MessagesContext.js":"19","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\contexts\\GlobalPopupContext.js":"20","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\GlobalPopup\\GlobalPopup.js":"21","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\StartListenServer\\StartListenServer.js":"22","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\UpdateProfilePage\\UpdateProfilePage.js":"23","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\ChatPage\\ChatPage.js":"24","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\VideoChatPage\\VideoChatPage.js":"25","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\ForgotPasswordPage\\ForgotPasswordPage.js":"26","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\NewsPage\\NewsPage.js":"27","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\LoginPage\\LoginPage.js":"28","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\SignupPage\\SignupPage.js":"29","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\AudioMessage\\AudioMessage.js":"30","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\contexts\\ThemeContext.js":"31"},{"size":319,"mtime":1612118605281,"results":"32","hashOfConfig":"33"},{"size":2826,"mtime":1612119749905,"results":"34","hashOfConfig":"33"},{"size":7112,"mtime":1611920936945,"results":"35","hashOfConfig":"33"},{"size":3244,"mtime":1612121690127,"results":"36","hashOfConfig":"33"},{"size":969,"mtime":1611836140736,"results":"37","hashOfConfig":"33"},{"size":576,"mtime":1610813206689,"results":"38","hashOfConfig":"33"},{"size":388,"mtime":1609957114998,"results":"39","hashOfConfig":"33"},{"size":992,"mtime":1610045519359,"results":"40","hashOfConfig":"33"},{"size":902,"mtime":1611241623709,"results":"41","hashOfConfig":"33"},{"size":794,"mtime":1610045509732,"results":"42","hashOfConfig":"33"},{"size":930,"mtime":1611241540320,"results":"43","hashOfConfig":"33"},{"size":1255,"mtime":1610045493394,"results":"44","hashOfConfig":"33"},{"size":1134,"mtime":1610897175500,"results":"45","hashOfConfig":"33"},{"size":480,"mtime":1611920986343,"results":"46","hashOfConfig":"33"},{"size":403,"mtime":1611836307139,"results":"47","hashOfConfig":"33"},{"size":343,"mtime":1611135810167,"results":"48","hashOfConfig":"33"},{"size":550,"mtime":1611047095621,"results":"49","hashOfConfig":"33"},{"size":4131,"mtime":1612032300252,"results":"50","hashOfConfig":"33"},{"size":7617,"mtime":1612116128443,"results":"51","hashOfConfig":"33"},{"size":784,"mtime":1612019162620,"results":"52","hashOfConfig":"33"},{"size":2142,"mtime":1611924007808,"results":"53","hashOfConfig":"33"},{"size":625,"mtime":1611836380627,"results":"54","hashOfConfig":"33"},{"size":3915,"mtime":1612025384512,"results":"55","hashOfConfig":"33"},{"size":3801,"mtime":1612116232922,"results":"56","hashOfConfig":"33"},{"size":3324,"mtime":1612098187537,"results":"57","hashOfConfig":"33"},{"size":2733,"mtime":1612025343148,"results":"58","hashOfConfig":"33"},{"size":212,"mtime":1611925473448,"results":"59","hashOfConfig":"33"},{"size":3206,"mtime":1612025357649,"results":"60","hashOfConfig":"33"},{"size":4249,"mtime":1612025369378,"results":"61","hashOfConfig":"33"},{"size":1596,"mtime":1612032002329,"results":"62","hashOfConfig":"33"},{"size":1261,"mtime":1612122515143,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"146o5a3",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\index.js",[],["140","141"],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\App.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\contexts\\AuthContext.js",["142","143"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { auth } from \"../firebase\";\r\nimport firebase from 'firebase';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AuthContext = React.createContext(undefined, undefined);\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport function AuthProvider({ children }) {\r\n  // state\r\n  const [ currentUserFull, setCurrentUserFull ] = useState();\r\n  const [ currentUser, setCurrentUser ] = useState();\r\n  \r\n  const [ allUsers, setAllUsers ] = useState([]);\r\n  const [ allUsersWithoutMe, setAllUsersWithoutMe ] = useState([]);\r\n  const [ allUsersOnline, setAllUsersOnline ] = useState([]);\r\n  // const [ loading, setLoading ] = useState(false); // мб потом использую\r\n  // const [ loginAction, setLoginAction ] = useState(false);\r\n  const [ logoutAction, setLogoutAction ] = useState(false);\r\n  // other\r\n  const history = useHistory();\r\n\r\n  // login actions\r\n\r\n  const signup = (email, password, name) => auth.createUserWithEmailAndPassword(email, password)\r\n    .then(() => {\r\n      let userId = auth.currentUser.uid\r\n      firebase.database().ref(`users/${userId}`).set({\r\n        name: name,\r\n        email: email,\r\n        online: true\r\n      })\r\n      history.push('/');\r\n    })\r\n\r\n  const login = (email, password) => auth.signInWithEmailAndPassword(email, password)\r\n    .then(() => {\r\n      console.log('action login');\r\n      history.push('/');\r\n    });\r\n\r\n  const loginHandler = (user) => {\r\n    updateUser({\r\n      id: user.uid,\r\n      updates: {\r\n        email: user.email,\r\n        online: true\r\n      }\r\n    })\r\n    getUser(user)\r\n      .then(data => {\r\n        setCurrentUser(data);\r\n      })\r\n      .finally(() => {});\r\n    // getUsers();\r\n    getUsers()\r\n      .then(data => {\r\n        setAllUsers(data);\r\n      })\r\n  }\r\n\r\n  // getting promises\r\n\r\n  const getUser = (user) => {\r\n    if (!user) user = auth.currentUser;\r\n    return firebase.database().ref(`users/${user.uid}`).once('value').then(snapshot => {\r\n      let userDetails = snapshot.val();\r\n      const updatedUser = {\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        id: auth.currentUser.uid,\r\n        online: userDetails.online\r\n      }\r\n      setCurrentUserFull(user);\r\n      return Promise.resolve(updatedUser);\r\n    });\r\n  }\r\n\r\n  const getUsers = () => {\r\n    return firebase.database().ref('users').once('value').then(snapshot => {\r\n      const userDetails = snapshot.val();\r\n      const users = Object.entries(userDetails).map(([ key, user ]) => {\r\n        return { ...user, id: key };\r\n      });\r\n      return Promise.all(users);\r\n    });\r\n  }\r\n\r\n  // logout actions\r\n\r\n  const logout = () => auth.signOut()\r\n    .finally(() => {\r\n      setLogoutAction(true)\r\n    });\r\n\r\n  const logoutHandler = () => {\r\n    updateUser({\r\n      id: currentUser.id,\r\n      updates: {\r\n        email: currentUser.email,\r\n        online: false\r\n      }\r\n    })\r\n    setCurrentUser();\r\n    setAllUsers([]);\r\n    setCurrentUserFull();\r\n    setLogoutAction(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!logoutAction) return;\r\n    console.log('user logout');\r\n    logoutHandler();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ logoutAction ]);\r\n\r\n  // update actions\r\n\r\n  const updateUser = (payload) => {\r\n    if (payload.id) firebase.database().ref(`users/${payload.id}`)\r\n      .update(payload.updates)\r\n      .finally(() => {\r\n        console.log('user updated');\r\n      });\r\n  }\r\n\r\n  const updateEmail = (email) => currentUserFull\r\n    .updateEmail(email)\r\n    .finally(() => {\r\n      loginHandler(auth.currentUser);\r\n      console.log('email changed');\r\n    });\r\n\r\n  const updatePassword = (password) => currentUserFull\r\n    .updatePassword(password)\r\n    .finally(() => {\r\n      loginHandler(auth.currentUser);\r\n      console.log('password changed');\r\n    });\r\n\r\n  const resetPassword = (email) => auth.sendPasswordResetEmail(email);\r\n\r\n  // state change watcher\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        console.log('auth state changed');\r\n        loginHandler(user);\r\n      }\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (currentUser && allUsers) {\r\n      const usersFiltered = allUsers.filter(user => user.id !== currentUser.id);\r\n      setAllUsersWithoutMe(usersFiltered);\r\n    }\r\n  }, [currentUser, allUsers]);\r\n\r\n  // useEffect(() => {\r\n  //   if (currentUser && allUsers) {\r\n  //     const usersFiltered = allUsers.filter(user => user.online);\r\n  //     setAllUsersOnline(usersFiltered);\r\n  //   }\r\n  // }, [allUsers, currentUser]);\r\n\r\n  // playground\r\n\r\n  useEffect(() => {\r\n    // console.log('currentUser', currentUser);\r\n  }, [ currentUser ]);\r\n\r\n  useEffect(() => {\r\n    // console.log('allUsers', allUsers);\r\n  }, [ allUsers ]);\r\n\r\n  // useEffect(() => {\r\n  //   if (!loginAction) return;\r\n  //   console.log('user login');\r\n  //   loginHandler(auth.currentUser);\r\n  // }, [loginAction]);\r\n\r\n  //\r\n  // useEffect(() => {\r\n  //   // console.log('loginAction', loginAction);\r\n  // }, [ loginAction ]);\r\n\r\n  // const getUsersAdd = () => {\r\n  //   let newAllUsers = allUsers;\r\n  //   firebase.database().ref('users').on('child_added', snapshot => {\r\n  //     const userDetails = snapshot.val();\r\n  //     let id = snapshot.key;\r\n  //     newAllUsers[id] = userDetails;\r\n  //     setAllUsers(newAllUsers);\r\n  //   });\r\n  // }\r\n\r\n  // const handleOnAuthStateChanged = () => {\r\n  //   firebase.auth().onAuthStateChanged(user => {\r\n  //     setLoading(true);\r\n  //     if (user) {\r\n  //       firebase.database().ref('users/' + user.uid).once('value', snapshot => {\r\n  //         let userDetails = snapshot.val();\r\n  //         setCurrentUser({\r\n  //           name: userDetails.name,\r\n  //           email: userDetails.email,\r\n  //           id: user.uid\r\n  //         })\r\n  //       })\r\n  //       updateUser({\r\n  //         id: user.uid,\r\n  //         updates: {\r\n  //           email: user.email,\r\n  //           online: true\r\n  //         }\r\n  //       })\r\n  //       getUsers();\r\n  //     } else {\r\n  //       console.log(currentUser);\r\n  //       updateUser({\r\n  //         id: currentUser.id,\r\n  //         updates: {\r\n  //           email: currentUser.email,\r\n  //           online: false\r\n  //         }\r\n  //       })\r\n  //       setAllUsers([]);\r\n  //       setCurrentUser();\r\n  //     }\r\n  //     setLoading(false);\r\n  //   });\r\n  // }\r\n  //\r\n\r\n  // const getUser = () => {\r\n  //   return new Promise((resolve) => {\r\n  //     if (currentUser) {\r\n  //       resolve(currentUser);\r\n  //       console.log(currentUser);\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  const value = {\r\n    // state\r\n    currentUser,\r\n    allUsers,\r\n    allUsersWithoutMe,\r\n    // login actions\r\n    login,\r\n    signup,\r\n    // logout actions\r\n    logout,\r\n    // update actions\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    // getting promises\r\n    getUser\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\Header\\Header.js",["144"],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\firebase.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\Alert\\Alert.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useValidatePassword.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useLogin.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useValidateEmail.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useSignup.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useUpdateProfile.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useForgotPassword.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\Users\\Users.js",["145","146"],"import React from 'react';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Users = () => {\r\n  const { allUsers, currentUser, allUsersWithoutMe } = useAuth();\r\n\r\n  return (\r\n    <>\r\n      {allUsersWithoutMe.map(user => {\r\n        return (\r\n          <div key={user.id}>\r\n            <Link to={`/chat/${user.id}`}>{user.name}</Link>\r\n          </div>\r\n        )\r\n      })\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Users;\r\n","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\Loading\\Loading.js",["147","148","149"],"import React, { useEffect, useState } from \"react\";\r\nimport './loading.scss';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <>\r\n      <div className=\"lds-roller\">\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Loading;\r\n","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\Delayed\\Delayed.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\hooks\\useNoUser.js",["150"],"import { useState, useEffect } from 'react';\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst useNoUser = () => {\r\n  const [ noUser, setNoUser ] = useState(true);\r\n  const { currentUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    fetchUser().then(() => {\r\n      console.log(currentUser)\r\n    });\r\n  }, [ currentUser ]);\r\n\r\n  const fetchUser = async () => {\r\n    try {\r\n      !currentUser ? setNoUser(true) : setNoUser(false);\r\n    } catch {\r\n      console.log('error');\r\n    }\r\n  }\r\n\r\n  return { noUser };\r\n}\r\n\r\nexport default useNoUser;\r\n",["151","152"],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\contexts\\VideoContext.js",["153","154","155"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport { useAuth } from \"./AuthContext\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\n\r\nconst VideoContext = React.createContext(undefined, undefined);\r\n\r\nexport const useVideo = () => useContext(VideoContext);\r\n\r\nexport function VideoProvider({ children }) {\r\n  // state\r\n  const [ stream, setStream ] = useState();\r\n  const [ receivingCall, setReceivingCall ] = useState(false);\r\n  const [ caller, setCaller ] = useState(\"\");\r\n  const [ callerSignal, setCallerSignal ] = useState();\r\n  const [ callAccepted, setCallAccepted ] = useState(false);\r\n  const [ loading, setLoading ] = useState(false);\r\n  const [ socket, setSocket ] = useState();\r\n  // other\r\n  const { currentUser } = useAuth();\r\n\r\n  const stopCurrentUserVideo = (userVideo) => {\r\n    if (userVideo && userVideo.srcObject) {\r\n      const tracks = userVideo.srcObject.getTracks();\r\n      tracks.forEach(track => {\r\n        track.stop();\r\n      });\r\n      userVideo.srcObject = null;\r\n    }\r\n  }\r\n\r\n  const stopOtherUserVideo = (partnerVideo) => {\r\n    if (partnerVideo && partnerVideo.srcObject) {\r\n      const tracks = partnerVideo.srcObject.getTracks();\r\n      tracks.forEach(track => {\r\n        track.stop();\r\n      });\r\n      partnerVideo.srcObject = null;\r\n    }\r\n  }\r\n\r\n  const stopCall = (userVideo, partnerVideo) => {\r\n    stopCurrentUserVideo(userVideo);\r\n    stopOtherUserVideo(partnerVideo);\r\n    declineCall();\r\n  }\r\n\r\n  const declineCall = () => {\r\n    setCallAccepted(false);\r\n    setReceivingCall(false);\r\n  }\r\n\r\n  const startListen = () => {\r\n    // сюда мб\r\n    const socket = io.connect(\"/\");\r\n    if (currentUser) {\r\n      socket.emit(\"yourID\", currentUser.id);\r\n      socket.emit(\"allUsers\", currentUser.id);\r\n\r\n      socket.on(\"hey\", (data) => {\r\n        setReceivingCall(true);\r\n        setCaller({ from: data.from, data });\r\n        setCallerSignal(data.signal);\r\n      })\r\n    }\r\n\r\n    setSocket(socket);\r\n  }\r\n\r\n  const startVideo = (userVideo) => {\r\n    if (currentUser) {\r\n      navigator.mediaDevices.getUserMedia({ video: true, audio: false }).then(stream => {\r\n        setStream(stream);\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n\r\n        if (socket) {\r\n          socket.on(\"hey\", (data) => {\r\n            setReceivingCall(true);\r\n            setCaller({ from: data.from, data });\r\n            setCallerSignal(data.signal);\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const callPeer = (id, partnerVideo) => {\r\n    console.log('срабатывает у того кто звонит');\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n\r\n    peer.on('signal', data => {\r\n      socket.emit('callUser', {\r\n        userToCall: id,\r\n        signalData: data,\r\n        from: currentUser.id,\r\n      })\r\n    })\r\n\r\n    peer.on(\"stream\", stream => {\r\n      if (partnerVideo.current) {\r\n        partnerVideo.current.srcObject = stream;\r\n      }\r\n    });\r\n\r\n    socket.on(\"callAccepted\", signal => {\r\n      setCallAccepted(true);\r\n      peer.signal(signal);\r\n    })\r\n\r\n  }\r\n\r\n  const acceptCall = (partnerVideo) => {\r\n    console.log('срабатывает у того кому звонят')\r\n    setCallAccepted(true);\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n\r\n    peer.on('signal', data => {\r\n      socket.emit('acceptCall', {\r\n        signal: data,\r\n        to: caller.from\r\n      })\r\n    })\r\n\r\n    peer.on(\"stream\", stream => {\r\n      partnerVideo.current.srcObject = stream;\r\n    });\r\n\r\n    peer.signal(callerSignal);\r\n  }\r\n\r\n  const value = {\r\n    // state\r\n    receivingCall,\r\n    callAccepted,\r\n    stream,\r\n    caller,\r\n    // actions\r\n    stopCurrentUserVideo,\r\n    stopOtherUserVideo,\r\n    stopCall,\r\n    startVideo,\r\n    callPeer,\r\n    acceptCall,\r\n    declineCall,\r\n    startListen\r\n  }\r\n\r\n  return (\r\n    <VideoContext.Provider value={value}>\r\n      {!loading && children}\r\n    </VideoContext.Provider>\r\n  )\r\n}\r\n","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\contexts\\MessagesContext.js",["156","157","158"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport { useAuth } from \"./AuthContext\";\r\nimport MicRecorder from 'mic-recorder-to-mp3';\r\nimport JSZip from 'jszip';\r\nimport uniqId from \"uniqid\";\r\n\r\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\r\n\r\nconst MessagesContext = React.createContext(undefined, undefined);\r\n\r\nexport const useMessages = () => useContext(MessagesContext);\r\n\r\nlet messagesRef;\r\nlet audioMessagesRef;\r\n\r\nexport function MessagesProvider({ children }) {\r\n  // state\r\n  const [ messages, setMessages ] = useState([]);\r\n  const [ isRecording, setIsRecording ] = useState(false);\r\n  const [ isBlocked, setIsBlocked ] = useState(false);\r\n  // other\r\n  const { currentUser } = useAuth();\r\n\r\n  // voice messages\r\n\r\n  const start = () => {\r\n    // start recording voice\r\n    if (isBlocked) {\r\n      console.log('Permission Denied');\r\n    } else {\r\n      Mp3Recorder\r\n        .start()\r\n        .then(() => {\r\n          setIsRecording(true)\r\n        })\r\n        .catch((e) => console.error(e));\r\n    }\r\n  };\r\n\r\n  const stop = (message, showVoiceRecorder, otherUserId) => {\r\n    // stop recording voice\r\n    Mp3Recorder\r\n      .stop()\r\n      .getMp3()\r\n      .then(([ buffer, blob ]) => {\r\n        setIsRecording(false);\r\n        // set voice file\r\n        const file = new File(buffer, 'music.mp3', {\r\n          type: blob.type,\r\n          lastModified: Date.now()\r\n        });\r\n        console.log('player', URL.createObjectURL(file));\r\n\r\n        const uniqIdSaved = uniqId();\r\n        // save voice file in another db\r\n        firebase.storage()\r\n          .ref(`chats/${currentUser.id}/${otherUserId}/${uniqIdSaved}`)\r\n          .put(file)\r\n          .then(snapshot => {\r\n            console.log(snapshot);\r\n            sendMessageHandler({ message, showVoiceRecorder, otherUserId, uniqId: uniqIdSaved });\r\n          });\r\n      })\r\n      .catch((error) => console.log('voice recording error', error));\r\n  };\r\n\r\n  const handlePermissions = (record) => {\r\n    // adaptive for all browsers\r\n    navigator.getUserMedia = (\r\n      navigator.getUserMedia\r\n      || navigator.webkitGetUserMedia\r\n      || navigator.mozGetUserMedia\r\n      || navigator.msGetUserMedia\r\n    );\r\n\r\n    // set permissions\r\n    navigator.getUserMedia({ audio: true },\r\n      (stream) => {\r\n        console.log('record', record);\r\n        if (record) {\r\n          console.log('Permission Granted');\r\n          setIsBlocked(false);\r\n        } else {\r\n          stream.getAudioTracks().forEach(track => {\r\n            track.stop();\r\n          })\r\n          // setIsBlocked(true);\r\n        }\r\n      },\r\n      () => {\r\n        console.log('Permission Denied');\r\n        setIsBlocked(true);\r\n      },\r\n    );\r\n\r\n    // off mic after voice recorded\r\n    // document.querySelectorAll('audio').forEach(item => {\r\n    //   console.log(item.srcObject);\r\n    //   if (!item.srcObject) return;\r\n    //   const tracks = item.srcObject.getTracks();\r\n    //   tracks.forEach(track => {\r\n    //     track.stop();\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  // text messages\r\n\r\n  const sendMessage = (payload) => {\r\n    // audio messages\r\n    // firebase.storage()\r\n    //   .ref(`chats/${currentUser.id}/${payload.otherUserId}`)\r\n    //   .put(payload.messageInfo).then();\r\n    // firebase.database()\r\n    //   .ref(`chats/${payload.otherUserId}/${currentUser.id}`)\r\n    //   .push(payload.messageInfo);\r\n\r\n    // апихнуть url на моменте пуша в массив\r\n\r\n    // send message to both of users\r\n    firebase.database()\r\n      .ref(`chats/${currentUser.id}/${payload.otherUserId}`)\r\n      .push(payload.messageInfo);\r\n    firebase.database()\r\n      .ref(`chats/${payload.otherUserId}/${currentUser.id}`)\r\n      .push(payload.messageInfo);\r\n  }\r\n\r\n  const getMessages = (otherUserId) => {\r\n    // get messages from db\r\n    const newMessages = [];\r\n    messagesRef = firebase.database().ref(`chats/${currentUser.id}/${otherUserId}`);\r\n    // audioMessagesRef = firebase.storage().ref(`chats/${currentUser.id}/${otherUserId}`);\r\n\r\n    // audioMessagesRef.getMetadata().then(metadata => {\r\n    //   console.log(metadata);\r\n    // }).catch(error => {\r\n    //   console.log('metadata error', error);\r\n    // })\r\n\r\n    messagesRef.on('child_added', snapshot => {\r\n      let messageDetails = snapshot.val();\r\n      let messageId = snapshot.key;\r\n\r\n      newMessages.push({\r\n        messageDetails,\r\n        messageId\r\n      })\r\n\r\n      return Promise.all(newMessages).then(() => {\r\n        console.log(newMessages);\r\n        setMessages(() => {\r\n          setTimeout(() => setMessages(newMessages));\r\n        });\r\n      })\r\n    })\r\n  }\r\n\r\n  const stopGettingMessages = () => {\r\n    // stop getting messages then url changes\r\n    if (messagesRef) {\r\n      messagesRef.off('child_added')\r\n      setMessages([]);\r\n    }\r\n  }\r\n\r\n  const sendMessageHandler = (payload) => {\r\n    if (payload.message.current.value.length <= 0 && !payload.showVoiceRecorder) return;\r\n    // set date of message\r\n    const createdAt = new Date();\r\n    const hours = createdAt.getHours()\r\n    const minutesStr = createdAt.getMinutes().toString()\r\n    const minutes = 2 >= minutesStr.length\r\n      ? Array.apply(null, { length: 2 - minutesStr.length + 1 }).join(\"0\") + minutesStr\r\n      : minutesStr.substring(0, 2);\r\n    const months = [\r\n      { string: \"January\", number: 1 },\r\n      { string: \"February\", number: 2 },\r\n      { string: \"March\", number: 3 },\r\n      { string: \"April\", number: 4 },\r\n      { string: \"May\", number: 5 },\r\n      { string: \"June\", number: 6 },\r\n      { string: \"July\", number: 7 },\r\n      { string: \"August\", number: 8 },\r\n      { string: \"September\", number: 9 },\r\n      { string: \"October\", number: 10 },\r\n      { string: \"November\", number: 11 },\r\n      { string: \"December\", number: 12 }\r\n    ];\r\n    const time = {\r\n      date: {\r\n        day: createdAt.getDate(),\r\n        month: months[createdAt.getMonth()],\r\n        year: createdAt.getFullYear()\r\n      },\r\n      hours,\r\n      minutes,\r\n    }\r\n\r\n    // set type of message\r\n    let messageType;\r\n    if (payload.showVoiceRecorder) {\r\n      messageType = 'voice';\r\n      // надо придумать voiceId какой то чтобы потом тягать по нему файл из базы данных с голосовыми\r\n      // send voice messages\r\n      firebase.storage().ref(`chats/${currentUser.id}/${payload.otherUserId}/${payload.uniqId}`).getDownloadURL().then(url => {\r\n        sendMessage({\r\n          otherUserId: payload.otherUserId,\r\n          messageInfo: {\r\n            from: {\r\n              name: currentUser.name,\r\n              id: currentUser.id\r\n            },\r\n            time,\r\n            type: messageType,\r\n            url\r\n          }\r\n        })\r\n      });\r\n    } else {\r\n      // send text messages\r\n      messageType = 'text';\r\n      sendMessage({\r\n        otherUserId: payload.otherUserId,\r\n        messageInfo: {\r\n          image: '',\r\n          message: payload.message.current.value,\r\n          from: {\r\n            name: currentUser.name,\r\n            id: currentUser.id\r\n          },\r\n          time,\r\n          type: messageType\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const value = {\r\n    // state\r\n    messages,\r\n    isRecording,\r\n    isBlocked,\r\n    // text messages actions\r\n    sendMessage,\r\n    getMessages,\r\n    stopGettingMessages,\r\n    sendMessageHandler,\r\n    // voice messages actions\r\n    start,\r\n    stop,\r\n    handlePermissions\r\n  }\r\n\r\n  return (\r\n    <MessagesContext.Provider value={value}>\r\n      {children}\r\n    </MessagesContext.Provider>\r\n  )\r\n}\r\n","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\contexts\\GlobalPopupContext.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\GlobalPopup\\GlobalPopup.js",["159"],"import React, { useEffect } from 'react';\r\nimport { useGlobalPopup } from \"../../contexts/GlobalPopupContext\";\r\nimport { useVideo } from \"../../contexts/VideoContext\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst GlobalPopup = () => {\r\n  const { message, removeMessage, addMessage } = useGlobalPopup();\r\n  const { receivingCall, callAccepted, declineCall, caller } = useVideo();\r\n  const { allUsers } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const handleDecline = () => {\r\n    declineCall();\r\n  };\r\n\r\n  const handleAccept = () => {\r\n    history.push('/video');\r\n  }\r\n\r\n  const handleClose = () => {\r\n    removeMessage();\r\n  }\r\n\r\n  useEffect(() => {\r\n    let user;\r\n    // выбираю чела который звонит\r\n    if (caller.data) user = allUsers.find(user => user.id === caller.data.userId);\r\n    // добавляю сообщение\r\n    if (receivingCall && !callAccepted && caller) addMessage(`вам звонит ${user.name}`, { type: 'call' });\r\n  }, [ receivingCall, callAccepted, caller ]);\r\n\r\n  const popupType = () => {\r\n    let popup;\r\n    // выбираю нужный тип попапа\r\n    switch (message.payload.type) {\r\n      case 'call':\r\n        popup =\r\n          <>\r\n            <div>\r\n              {message.message && <p>{message.message}</p>}\r\n              <button onClick={() => {\r\n                handleAccept();\r\n                handleClose();\r\n              }}>ответить</button>\r\n              <button onClick={() => {\r\n                handleDecline();\r\n                handleClose();\r\n              }}>отклонить</button>\r\n            </div>\r\n          </>\r\n        break;\r\n      case 'message':\r\n        popup =\r\n          <div>\r\n            {message.message && <p>{message.message}</p>}\r\n            <button onClick={handleClose}>\r\n              закрыть\r\n            </button>\r\n          </div>\r\n        break;\r\n      default:\r\n        popup = <></>;\r\n    }\r\n    return popup;\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {!!message && popupType()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GlobalPopup;\r\n","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\StartListenServer\\StartListenServer.js",["160"],"import React, { useEffect, useState } from \"react\";\r\nimport { useVideo } from \"../../contexts/VideoContext\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nconst StartListenServer = () => {\r\n  const { startListen } = useVideo();\r\n  const [ loading, setLoading ] = useState(true);\r\n  const { currentUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    currentUser ? setLoading(false) : setLoading(true);\r\n  }, [ currentUser ]);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      startListen();\r\n      console.log('listen')\r\n    }\r\n  }, [loading]);\r\n\r\n  return (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default StartListenServer;\r\n","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\UpdateProfilePage\\UpdateProfilePage.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\ChatPage\\ChatPage.js",["161","162"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport './chat-page.scss'\r\nimport { useMessages } from \"../../contexts/MessagesContext\";\r\nimport { Prompt, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nconst ChatPage = () => {\r\n  // ref\r\n  const message = useRef();\r\n  // state\r\n  const [ otherUserId, setOtherUserId ] = useState('');\r\n  const [ showVoiceRecorder, setShowVoiceRecorder ] = useState(true);\r\n  // other\r\n  const history = useHistory();\r\n  const {\r\n    // state\r\n    messages,\r\n    test,\r\n    // text messages actions\r\n    getMessages,\r\n    stopGettingMessages,\r\n    sendMessageHandler,\r\n    // voice messages actions\r\n    start,\r\n    stop,\r\n    handlePermissions\r\n  } = useMessages();\r\n  const { currentUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    setOtherUserId(history.location.pathname.split('/')[2]);\r\n  }, [ history.location.pathname ]);\r\n\r\n  useEffect(() => {\r\n    if (otherUserId) getMessages(otherUserId);\r\n  }, [ otherUserId ]);\r\n\r\n  // useEffect(() => {\r\n  //   const unListen = history.listen(() => {\r\n  //\r\n  //   });\r\n  //   return () => {\r\n  //     unListen();\r\n  //   }\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('message', messages);\r\n  }, [ messages ]);\r\n\r\n  return (\r\n    <div className={'chat'}>\r\n      <Prompt\r\n        when={showVoiceRecorder}\r\n        message={((location) => {\r\n          const prevLocation = window.location.href.split('/')[4];\r\n          const nextLocation = location.pathname.split('/')[2];\r\n          if (showVoiceRecorder && prevLocation !== nextLocation) {\r\n            handlePermissions(false);\r\n            stopGettingMessages();\r\n          }\r\n          return true;\r\n        })}\r\n      />\r\n      <div className={'chat-window'}>\r\n        {messages && messages.map(message => (\r\n          // где то здесь нужно считать какой тип сообщения мне пришел и в зависимости от этого выводить просто сообщение или гс или ещё что то\r\n          <div\r\n            key={message.messageId}\r\n            className={message.messageDetails.from.id === currentUser.id\r\n              ? 'my-message'\r\n              : 'other-message'}>\r\n            {/*text message*/}\r\n            {message.messageDetails.type === 'text' &&\r\n            <span>\r\n              {message.messageDetails.message}\r\n            </span>}\r\n            {/*voice message*/}\r\n            {message.messageDetails.type === 'voice' &&\r\n            <div className=\"App\">\r\n              <header className=\"App-header\">\r\n                <audio src={message.messageDetails.url} controls=\"controls\"/>\r\n              </header>\r\n            </div>\r\n            }\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className={'chat-input-wrapper'}>\r\n        <input type=\"text\" className={'chat-input'} ref={message} onInput={() => {\r\n          message.current.value.length > 0 ? setShowVoiceRecorder(false) : setShowVoiceRecorder(true);\r\n        }}/>\r\n        {\r\n          showVoiceRecorder ?\r\n            // если нет текста то...\r\n            <input type=\"checkbox\" onClick={event => {\r\n              if (event.target.checked) {\r\n                handlePermissions(true);\r\n                start();\r\n              } else {\r\n                handlePermissions(false);\r\n                stop(message, showVoiceRecorder, otherUserId);\r\n              }\r\n            }}/> :\r\n            // если есть текст то...\r\n            <button onClick={() => {\r\n              sendMessageHandler({ message, showVoiceRecorder, otherUserId });\r\n            }} className={'chat-button'}>Отправить\r\n            </button>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatPage;\r\n","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\VideoChatPage\\VideoChatPage.js",["163","164","165","166","167","168","169"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport './video-chat-page.scss';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory, useLocation, Prompt } from \"react-router-dom\";\r\nimport { useVideo } from \"../../contexts/VideoContext\";\r\nimport { useGlobalPopup } from \"../../contexts/GlobalPopupContext\";\r\n\r\nconst VideoChatPage = () => {\r\n  // ref\r\n  const userVideo = useRef();\r\n  const partnerVideo = useRef();\r\n  // state\r\n  // other\r\n  const history = useHistory();\r\n  const { addMessage } = useGlobalPopup();\r\n  const {\r\n    // state\r\n    receivingCall,\r\n    callAccepted,\r\n    stream,\r\n    caller,\r\n    // actions\r\n    stopCurrentUserVideo,\r\n    stopCall,\r\n    startVideo,\r\n    callPeer,\r\n    acceptCall\r\n  } = useVideo();\r\n  const { currentUser, allUsers } = useAuth();\r\n\r\n  let UserVideo;\r\n  if (stream) {\r\n    UserVideo = (\r\n      <video playsInline muted ref={userVideo} autoPlay/>\r\n    );\r\n  }\r\n\r\n  let PartnerVideo;\r\n  if (callAccepted) {\r\n    PartnerVideo = (\r\n      <video playsInline ref={partnerVideo} autoPlay/>\r\n    );\r\n  }\r\n\r\n  let IncomingCall;\r\n  if (receivingCall && !callAccepted && caller) {\r\n    IncomingCall = (\r\n      <div>\r\n        <h1>accept</h1>\r\n        <button onClick={() => {\r\n          acceptCall(partnerVideo);\r\n        }}>\r\n          Accept\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (receivingCall && !callAccepted && caller) {\r\n  //     return acceptCall(partnerVideo);\r\n  //   }\r\n  // }, [receivingCall, callAccepted, caller, partnerVideo, acceptCall]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log('video unmount')\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    startVideo(userVideo);\r\n  }, [ currentUser ]);\r\n\r\n  return (\r\n    <div className={'videochat-wrapper container'}>\r\n      <div className={'videochat'}>\r\n        <Prompt\r\n          when={!!stream}\r\n          message={((location) => {\r\n            if (!!stream && location.pathname !== '/video') {\r\n              console.log('webcam stop');\r\n              stopCall(userVideo.current, partnerVideo.current);\r\n            }\r\n            return true;\r\n          })}\r\n        />\r\n        <div>\r\n          {UserVideo}\r\n          {PartnerVideo}\r\n        </div>\r\n        <div>\r\n          {allUsers.map(user => {\r\n            if (user.id === currentUser.id) {\r\n              return null;\r\n            }\r\n            return (\r\n              <button\r\n                key={user.id}\r\n                onClick={() => {\r\n                  callPeer(user.id, partnerVideo);\r\n                }}>\r\n                Call {user.id} {user.name}\r\n              </button>\r\n            );\r\n          })}\r\n          <button onClick={() => {\r\n            stopCurrentUserVideo(userVideo.current);\r\n          }}>\r\n            stop video\r\n          </button>\r\n          <button onClick={() => {\r\n            startVideo(userVideo)\r\n          }}>\r\n            start video\r\n          </button>\r\n          <button onClick={() => {\r\n            stopCall(userVideo.current, partnerVideo.current);\r\n          }}>\r\n            stop call\r\n          </button>\r\n        </div>\r\n        <div>\r\n          {IncomingCall}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoChatPage;\r\n","C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\ForgotPasswordPage\\ForgotPasswordPage.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\NewsPage\\NewsPage.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\LoginPage\\LoginPage.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\pages\\SignupPage\\SignupPage.js",[],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\components\\AudioMessage\\AudioMessage.js",["170","171","172","173","174","175"],"import React, { useEffect, useState } from 'react';\r\nimport MicRecorder from 'mic-recorder-to-mp3';\r\n\r\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\r\n\r\nconst AudioMessage = () => {\r\n  // state\r\n  const [ isRecording, setIsRecording ] = useState(false);\r\n  const [ blobURL, setBlobURL ] = useState('');\r\n  const [ isBlocked, setIsBlocked ] = useState(false);\r\n  // other\r\n  // const start = () => {\r\n  //   if (isBlocked) {\r\n  //     console.log('Permission Denied');\r\n  //   } else {\r\n  //     Mp3Recorder\r\n  //       .start()\r\n  //       .then(() => {\r\n  //         setIsRecording(true)\r\n  //       }).catch((e) => console.error(e));\r\n  //   }\r\n  // };\r\n  //\r\n  // const stop = () => {\r\n  //   Mp3Recorder\r\n  //     .stop()\r\n  //     .getMp3()\r\n  //     .then(([ buffer, blob ]) => {\r\n  //       const blobURL = URL.createObjectURL(blob)\r\n  //       console.log(blobURL);\r\n  //       setBlobURL(blobURL);\r\n  //       setIsRecording(false);\r\n  //     }).catch((e) => console.log(e));\r\n  // };\r\n\r\n  // const handlePermissions = () => {\r\n  //   navigator.getUserMedia({ audio: true },\r\n  //     () => {\r\n  //       console.log('Permission Granted');\r\n  //       setIsBlocked(false);\r\n  //     },\r\n  //     () => {\r\n  //       console.log('Permission Denied');\r\n  //       setIsBlocked(true);\r\n  //     },\r\n  //   );\r\n  // }\r\n\r\n  useEffect(() => {\r\n    // handlePermissions();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <audio src={blobURL} controls=\"controls\"/>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AudioMessage;\r\n",["176","177"],"C:\\Users\\Савва\\Desktop\\prog\\react\\simple\\simple-frontend\\src\\contexts\\ThemeContext.js",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":17,"column":11,"nodeType":"184","messageId":"185","endLine":17,"endColumn":25},{"ruleId":"182","severity":1,"message":"186","line":17,"column":27,"nodeType":"184","messageId":"185","endLine":17,"endColumn":44},{"ruleId":"182","severity":1,"message":"187","line":17,"column":24,"nodeType":"184","messageId":"185","endLine":17,"endColumn":32},{"ruleId":"182","severity":1,"message":"187","line":6,"column":11,"nodeType":"184","messageId":"185","endLine":6,"endColumn":19},{"ruleId":"182","severity":1,"message":"188","line":6,"column":21,"nodeType":"184","messageId":"185","endLine":6,"endColumn":32},{"ruleId":"182","severity":1,"message":"189","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"190","line":1,"column":28,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"191","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":17},{"ruleId":"192","severity":1,"message":"193","line":12,"column":6,"nodeType":"194","endLine":12,"endColumn":21,"suggestions":"195"},{"ruleId":"178","replacedBy":"196"},{"ruleId":"180","replacedBy":"197"},{"ruleId":"182","severity":1,"message":"189","line":1,"column":29,"nodeType":"184","messageId":"185","endLine":1,"endColumn":38},{"ruleId":"182","severity":1,"message":"198","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":16},{"ruleId":"182","severity":1,"message":"199","line":18,"column":20,"nodeType":"184","messageId":"185","endLine":18,"endColumn":30},{"ruleId":"182","severity":1,"message":"189","line":1,"column":29,"nodeType":"184","messageId":"185","endLine":1,"endColumn":38},{"ruleId":"182","severity":1,"message":"200","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":13},{"ruleId":"182","severity":1,"message":"201","line":15,"column":5,"nodeType":"184","messageId":"185","endLine":15,"endColumn":21},{"ruleId":"192","severity":1,"message":"202","line":31,"column":6,"nodeType":"194","endLine":31,"endColumn":45,"suggestions":"203"},{"ruleId":"192","severity":1,"message":"204","line":19,"column":6,"nodeType":"194","endLine":19,"endColumn":15,"suggestions":"205"},{"ruleId":"182","severity":1,"message":"206","line":18,"column":5,"nodeType":"184","messageId":"185","endLine":18,"endColumn":9},{"ruleId":"192","severity":1,"message":"207","line":36,"column":6,"nodeType":"194","endLine":36,"endColumn":21,"suggestions":"208"},{"ruleId":"182","severity":1,"message":"190","line":1,"column":28,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"209","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":10},{"ruleId":"182","severity":1,"message":"210","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":12},{"ruleId":"182","severity":1,"message":"211","line":6,"column":22,"nodeType":"184","messageId":"185","endLine":6,"endColumn":33},{"ruleId":"182","severity":1,"message":"212","line":16,"column":9,"nodeType":"184","messageId":"185","endLine":16,"endColumn":16},{"ruleId":"182","severity":1,"message":"213","line":17,"column":11,"nodeType":"184","messageId":"185","endLine":17,"endColumn":21},{"ruleId":"192","severity":1,"message":"214","line":75,"column":6,"nodeType":"194","endLine":75,"endColumn":21,"suggestions":"215"},{"ruleId":"182","severity":1,"message":"216","line":4,"column":7,"nodeType":"184","messageId":"185","endLine":4,"endColumn":18},{"ruleId":"182","severity":1,"message":"217","line":8,"column":11,"nodeType":"184","messageId":"185","endLine":8,"endColumn":22},{"ruleId":"182","severity":1,"message":"218","line":8,"column":24,"nodeType":"184","messageId":"185","endLine":8,"endColumn":38},{"ruleId":"182","severity":1,"message":"219","line":9,"column":20,"nodeType":"184","messageId":"185","endLine":9,"endColumn":30},{"ruleId":"182","severity":1,"message":"220","line":10,"column":11,"nodeType":"184","messageId":"185","endLine":10,"endColumn":20},{"ruleId":"182","severity":1,"message":"221","line":10,"column":22,"nodeType":"184","messageId":"185","endLine":10,"endColumn":34},{"ruleId":"178","replacedBy":"222"},{"ruleId":"180","replacedBy":"223"},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'allUsersOnline' is assigned a value but never used.","Identifier","unusedVar","'setAllUsersOnline' is assigned a value but never used.","'allUsers' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useAuth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["226"],["224"],["225"],"'firebase' is defined but never used.","'setLoading' is assigned a value but never used.","'JSZip' is defined but never used.","'audioMessagesRef' is defined but never used.","React Hook useEffect has missing dependencies: 'addMessage' and 'allUsers'. Either include them or remove the dependency array.",["227"],"React Hook useEffect has a missing dependency: 'startListen'. Either include it or remove the dependency array.",["228"],"'test' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.",["229"],"'io' is defined but never used.","'Peer' is defined but never used.","'useLocation' is defined but never used.","'history' is assigned a value but never used.","'addMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'startVideo'. Either include it or remove the dependency array.",["230"],"'Mp3Recorder' is assigned a value but never used.","'isRecording' is assigned a value but never used.","'setIsRecording' is assigned a value but never used.","'setBlobURL' is assigned a value but never used.","'isBlocked' is assigned a value but never used.","'setIsBlocked' is assigned a value but never used.",["224"],["225"],"no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [currentUser, fetchUser]",{"range":"241","text":"242"},"Update the dependencies array to be: [receivingCall, callAccepted, caller, allUsers, addMessage]",{"range":"243","text":"244"},"Update the dependencies array to be: [loading, startListen]",{"range":"245","text":"246"},"Update the dependencies array to be: [getMessages, otherUserId]",{"range":"247","text":"248"},"Update the dependencies array to be: [currentUser, startVideo]",{"range":"249","text":"250"},[313,328],"[currentUser, fetchUser]",[1002,1041],"[receivingCall, callAccepted, caller, allUsers, addMessage]",[541,550],"[loading, startListen]",[1000,1015],"[getMessages, otherUserId]",[1795,1810],"[currentUser, startVideo]"]